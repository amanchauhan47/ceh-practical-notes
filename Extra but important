Steganography

   # NTFS Streams
	type calc.exe > file.txt:calc.exe
	dir /r
	mklink backdoor.exe file.txt:calc.exe

   # OpenStego	(.bmp)

   # StegOnline (.png, .jpg)
	https://georgeom.net/StegOnline/upload (5 5 5 followed by RGB)
	
   # Steghide : (.jpg)
	steghide --embed -ef secret.txt -cf image.jpg -p "hacker@123"
	steghide --extract -sf image.jpg -p "hacker@123"

   # Stegcracker:
	stegcracker image.jpg /usr/share/wordlists/rockyou.txt
	
   # Stegseek (Crack Steghide):
	stegseek --crack image.jpg -wl /usr/share/wordlists/rockyou.txt --verbose

   # SNOW.EXE / Stegsnow :
     --EMBED
	
	# Message taken with "-m"
	stegsnow -C -m "Bruce Wayne is Batman" -p "hacker@123" note.txt hidden-note.txt
	
	# Message taken from file.
	stegnow -C -f message.txt -p "hacker@123" note.txt hidden-note.txt
	
     --EXTRACT
	# Message will be standard output.
	stegsnow -C -p "hacker@123" hidden-note.txt

	# Message will save to a file.
	stegsnow -C -p "hacker@123" hidden-note.txt revealed.txt
	
	

ADB (Android Debugging Bridge)

	adb version
	adb devices
	adb devices -l
	
	# Open a port on mobile device
	adb tcpip 5555

	# Connect to a mobile over tcpip
	adb connect <IP>:<PORT>

	adb shell

	# Download file from phone
	adb pull <source> <destination>

	# Upload file to phone
	adb push <source> <destination>

	# Online APK analysis
	sisik.eu	(manifest, permissions, etc..)


Hydra
	
	hydra -l user -p password <IP> ftp
	hydra -L users.txt -P passwords.txt <IP> smb
	ncrack --user user -P wordlist.txt ssh://10.10.91.125:22 -v

	ssh -oHostKeyAlgorithms=+ssh-rsa user@10.10.91.125
	hydra -l admin -P /usr/share/wordlists/rockyou.txt brute.thm http-post-form '/admin/:user=^USER^&pass=^PASS^:Username or password invalid'
	evil-winrm -i 10.129.181.85 -u "Administrator" -H "0118e05f0e12da4526947612faadc508"
	evil-winrm -i 10.129.181.85 -u "Administrator" -p "badminton"

Privilege Escalation Linux

    # Horizontal PrivEsc
	sudo -u user2 /bin/bash
	ssh		cat /home/user/.ssh/id_rsa

    # Vertical PrivEsc
	sudo -i
	sudo		sudo -l
	suid		find / -perm -4000 2> /dev/null (SUID)
	ssh		cat /root/.ssh/id_rsa
	permission	ls -lah /etc/shadow /etc/passwd
	nfs
	cronjob	(overwrite.sh)
		write permission
		path variable
		Wildcard (tar *)
	capabilities	getcap -r / 2> /dev/null
	

    # Scripts
	linpeas.sh or winpeas.exe			
	linux-exploit-suggester.sh	
	windows-exploit-suggester.exe
	
Wireshark (Packet Sniffing)

    # Capture File Info
	Statistics -> Capture File Properties
	
    # Filtering Packets
	ip.addr == <IP>
	http
	tcp
	!tcp
	tcp.port == 9999
	tcp.dstport == 9999
	http.request.method == "POST"

    # Follow Up Streams
	Right Click on Packet -> Follow -> TCP/HTTP Streams

	(Change the stream number to see entire communication)
	
    # Finding Files 
	File -> Export Objects

    # Finding Comments
	Statistics -> Capture File Properties

    # Search Strings (Packet Details)
	Ctrl + F

    # DDos Attack & DDoS Attack
	Statistics -> Conversations

    # IoT
	mqtt
	mqtt.msgtype == 3	(Publish Message)

    # 3 Way Handshake

	SYN :	  tcp.flags.syn == 1 && tcp.flags.ack == 0
	SYN-ACK:  tcp.flags.syn == 1 && tcp.flags.ack == 1
	ACK:	  tcp.flags.syn == 0 && tcp.flags.ack == 1


RDP 
    # Confirm RDP is running or not?
	msfconsole -q
		> search rdp_scanner
		> use auxiliary/scanner/rdp/rdp_scanner
		> show options
		> set RHOSTS <ip>
		> set RPORT <port>
		> exploit

    # Exploiting RDP
	hydra -L users.txt -P passwords.txt rdp://<ip>
	
    # RDP Login
	xfreerdp /v:<ip>:<port> /u:user /p:password /cert:ignore
	xfreerdp /v:<ip> /u:user /p:password /cert:ignore /workarea /smart-sizing
	remmina -c rdp://user:password@<ip> --enable-fullscreen

